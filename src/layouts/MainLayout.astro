---
import "@fontsource/lato/400.css";
import "@fontsource/lato/700.css";
import "@fontsource/montserrat/700.css";
import "@fontsource/montserrat/900.css";

import "../styles/global.css";
import Sidebar from "../components/Sidebar.astro";
import Hamburger from "../components/Hamburger.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
// Derive document language from the current route prefix for a11y/SEO
const path = Astro.url.pathname;
const lang = path.startsWith('/es') ? 'es' : path.startsWith('/fr') ? 'fr' : 'en';
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="google" content="notranslate" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
    <style>
      ::view-transition-old(*) {
        animation: fade-out 0.5s ease-in-out forwards;
      }
      ::view-transition-new(*) {
        animation: slide-in-from-left 1s cubic-bezier(0.25, 1, 0.5, 1) forwards;
      }
    </style>
  </head>

  <body class="bg-gray-800 font-sans relative">
    <a href="#main" class="skip-link">Skip to main content</a>
    <Hamburger />

    <div class="flex flex-col md:flex-row">
      <Sidebar />

      <div class="w-full overflow-hidden">
        <main
          id="main"
          class="w-full min-h-screen md:h-screen overflow-y-auto bg-cover bg-center md:bg-fixed flex items-start justify-center pt-[env(safe-area-inset-top)] pb-[env(safe-area-inset-bottom)]"
          style="background-image: url('/background.png');"
        >
          <slot />
        </main>
      </div>
    </div>

    <script>
      function setupHamburger() {
        const hamburgerButton = document.getElementById("hamburger-button");
        const sidebar = document.getElementById("sidebar");

        if (hamburgerButton && sidebar) {
          const updateAria = () => {
            const isHidden = sidebar.classList.contains("hidden");
            hamburgerButton.setAttribute("aria-expanded", String(!isHidden));
          };
          // Initialize state on load
          updateAria();

          hamburgerButton.addEventListener("click", () => {
            sidebar.classList.toggle("hidden");
            updateAria();
          });
        }
      }

      document.addEventListener("DOMContentLoaded", setupHamburger);
      document.addEventListener("astro:page-load", setupHamburger);
    </script>
  </body>
</html>